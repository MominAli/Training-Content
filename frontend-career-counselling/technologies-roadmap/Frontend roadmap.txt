Frontend development skills for Product based companies 🔥

A roadmap is the best way to kick-start your attempt to become a frontend developer.

Bare-minimum topics for working on product-based organisation.

𝗕𝗮𝘀𝗶𝗰 𝗝𝗮𝘃𝗮𝗦𝗰𝗿𝗶𝗽𝘁 𝗖𝗼𝗻𝗰𝗲𝗽𝘁𝘀:
1. Data types
2. Functions
3. Scope in JavaScript
4. Closure
5. Event loop
6. Prototype and prototype chain
7. Class and inheritance
8. DOM
9. bind/call/apply
10. Promise
11. WebAPI
12. Task queue
13. Call stack
14. Async/await
15. Generators
16. Typescript

𝗕𝗮𝘀𝗶𝗰 𝗛𝗧𝗠𝗟 𝗖𝗼𝗻𝗰𝗲𝗽𝘁𝘀:
1. block element
2. import
3. etc - infinite questions

𝗕𝗮𝘀𝗶𝗰 𝗖𝗦𝗦 𝗖𝗼𝗻𝗰𝗲𝗽𝘁𝘀:
1. Class and other selectors
2. Pseudo Classes
3. Box Model
4. Pseudo Elements
5. CSS type - flex, grid, normal
6. How to centre
7. pseudo classes and elements
8. All element states - active, hover
9. Media queries
10. Pre-processors - SCSS or LESS
1. mixins
11. CSS constants
12. BEM
13. Import

𝗕𝗮𝘀𝗶𝗰 𝗪𝗲𝗯 𝗖𝗼𝗻𝗰𝗲𝗽𝘁𝘀:
1. Page rendering cycle
2. http/https/https2
3. CORS
4. Local storage/Session storage
5. Cookie
6. JWT
7. XHR
8. Micro Frontend
9. REST/GraphQL/Socket connection
10. Browser Concepts
11. Debugging Application
12. Chrome Dev Tool Features

𝗔𝗱𝘃𝗮𝗻𝗰𝗲𝗱 𝗝𝗮𝘃𝗮𝗦𝗰𝗿𝗶𝗽𝘁 𝗖𝗼𝗻𝗰𝗲𝗽𝘁𝘀:
1. OOPs concept
2. Design Patterns
a. Singleton
b. Provider
c. Prototype
d. Observer
e. Module
f. HOC

3. Understanding V8 in depth
a. JIT
b. Interpreter
c. Execution
d. Compiler
4. Currying

𝗕𝗮𝘀𝗶𝗰 𝗥𝗲𝗮𝗰𝘁𝗝𝗦 𝗖𝗼𝗻𝗰𝗲𝗽𝘁𝘀 (bonus): -
1. Introduction JSX
2. React Component
3. Component State and Props
4. Adding Style (CSS)
5. Functional and Class components
6. React Lifecycle Methods
7. Virtual DOM
8. React Hooks
9. Custom Hooks
10. Context API
11. Synthetic Events
12. Routing
13. Data Flow (Redux/Flux)
14. Server-Side Rendering
15. Unit Testing
16. Jest & React Testing library
17. Mocking Data
18. Understanding Webpack (Bundler)
19. Babel, env, prettier, linter

Save it for future reference ❤️


1. HTML & CSS Fundamentals: Learn about layouts, positioning, and responsive design to ensure your creations look great on any device.

2. JavaScript Essentials: Dive into JavaScript to bring interactivity to your web pages. Learn about variables, data types, loops, and conditionals.

3. Version Control with Git: Collaborate effectively by mastering Git. Understand version control concepts, branching, merging, and pull requests.

4. Responsive Design: Delve deeper into responsive design techniques. Explore media queries, flexbox, and CSS Grid to create seamless experiences across various screen sizes.

5. Frontend Frameworks: Familiarize yourself with popular frameworks like, Vue.js, or Angular. Learn React & how to build reusable components, manage state, and create dynamic UIs.

6. Build Tools & Task Runners: Grasp the concepts of build tools like Webpack and task runners like Gulp.

7. Web Performance Optimization: Learn to optimize your websites for speed and efficiency. Understand techniques like code splitting, lazy loading, and caching to ensure a smooth user experience.

8. Browser Developer Tools: Get comfortable with browser developer tools. Debugging, profiling, and inspecting elements will become your superpowers.

9. Testing and Debugging: Dive into testing methodologies like unit testing and end-to-end testing. Understand how to catch and fix bugs efficiently.

10. Personal Projects: Building your portfolio not only demonstrates your skills but also lets you experiment and learn.

11. Soft Skills: Effective communication, teamwork, and problem-solving are crucial. Collaborate with designers, backend developers, and stakeholders to deliver outstanding results.
